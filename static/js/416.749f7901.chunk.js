"use strict";(self.webpackChunkkuber_mehta_portfolio=self.webpackChunkkuber_mehta_portfolio||[]).push([[416],{416:(e,t,l)=>{l.r(t),l.d(t,{default:()=>c});var s=l(43),r=l(579);class n{constructor(e,t){this.i=e,this.j=t}getNeighbors(){let e=[];return e.push(new n(this.i-1,this.j-1)),e.push(new n(this.i-1,this.j)),e.push(new n(this.i-1,this.j+1)),e.push(new n(this.i,this.j-1)),e.push(new n(this.i,this.j+1)),e.push(new n(this.i+1,this.j-1)),e.push(new n(this.i+1,this.j)),e.push(new n(this.i+1,this.j+1)),e}toString(){return"".concat(this.i,",").concat(this.j)}}class o{constructor(){this.cells=new Map}born(e){this.cells.set(e.toString(),e)}kill(e){this.cells.delete(e.toString())}isAlive(e){return this.cells.has(e.toString())}getAliveNeighbors(e){var t=[];for(const l of e.getNeighbors())this.isAlive(l)&&t.push(l);return t}toggleCell(e,t){let l=new n(e,t);this.isAlive(l)?this.kill(l):this.born(l)}step(){let e=new Map;for(const r of this.cells.values()){e.set(r.toString(),r);for(const t of r.getNeighbors())e.set(t.toString(),t)}var t=[];for(const r of e.values()){var l=this.getAliveNeighbors(r).length;this.isAlive(r)&&l<2||this.isAlive(r)&&l>3?t.push({cell:r,next:"dead"}):3===l&&t.push({cell:r,next:"alive"})}var s=this;t.forEach((function(e){"dead"===e.next?s.kill(e.cell):"alive"===e.next&&s.born(e.cell)}))}clear(){this.cells.clear()}getCells(){return Array.from(this.cells.values())}}const i=()=>{var e;const t=(0,s.useRef)(null),l=(0,s.useRef)(new o),i=(0,s.useRef)(null),[c,a]=(0,s.useState)(!1),[h,f]=(0,s.useState)(200),[u,g]=(0,s.useState)(0),[d,b]=(0,s.useState)(!0),[p,m]=(0,s.useState)(""),v=600,x=400,j=Math.floor(75),C=Math.floor(50),k=(0,s.useCallback)((()=>{const e=t.current;if(!e)return;const s=e.getContext("2d");if(s.clearRect(0,0,e.width,e.height),d){s.strokeStyle="#2a2a2a",s.lineWidth=.5;for(let t=0;t<=j;t++)s.beginPath(),s.moveTo(8*t,0),s.lineTo(8*t,e.height),s.stroke();for(let t=0;t<=C;t++)s.beginPath(),s.moveTo(0,8*t),s.lineTo(e.width,8*t),s.stroke()}s.fillStyle="#5abb9a",l.current.getCells().forEach((e=>{const t=8*e.j,l=8*e.i;t>=0&&t<v&&l>=0&&l<x&&s.fillRect(t,l,8,8)}))}),[d,8,j,C,v,x]),w=(0,s.useCallback)((e=>{const s=t.current;if(!s)return;const r=s.getBoundingClientRect(),n=e.clientX-r.left,o=e.clientY-r.top,i=Math.floor(n/8),c=Math.floor(o/8);i>=0&&i<j&&c>=0&&c<C&&(l.current.toggleCell(c,i),k())}),[k,8,j,C]),N=(0,s.useCallback)((e=>{e.preventDefault();const s=t.current;if(!s)return;const r=s.getBoundingClientRect(),n=e.touches[0],o=n.clientX-r.left,i=n.clientY-r.top,c=Math.floor(o/8),a=Math.floor(i/8);c>=0&&c<j&&a>=0&&a<C&&(l.current.toggleCell(a,c),k())}),[k,8,j,C]),S=(0,s.useCallback)((()=>{const e=l.current.getCells().length;l.current.step();const t=l.current.getCells().length;g((e=>e+1)),0===t&&e>0&&(clearInterval(i.current),a(!1),m("All cells died - evolution stopped"),setTimeout((()=>m("")),3e3)),k()}),[k]),M=(0,s.useCallback)((()=>{c?(clearInterval(i.current),a(!1)):(i.current=setInterval(S,h),a(!0))}),[c,S,h]),y=(0,s.useCallback)((()=>{clearInterval(i.current),a(!1),l.current.clear(),g(0),k()}),[k]),A=(0,s.useCallback)((()=>{l.current.clear(),g(0);for(let e=0;e<6;e++){const e=Math.floor(Math.random()*(C-8))+4,t=Math.floor(Math.random()*(j-8))+4;for(let s=-2;s<=2;s++)for(let r=-2;r<=2;r++)if(Math.random()<.5){const o=e+s,i=t+r;o>=0&&o<C&&i>=0&&i<j&&l.current.born(new n(o,i))}}[{row:Math.floor(.7*C),col:Math.floor(.2*j),pattern:[[0,0],[0,1],[1,0],[1,1]]},{row:Math.floor(.3*C),col:Math.floor(.8*j),pattern:[[0,1],[1,0],[1,2],[2,1]]},{row:Math.floor(.8*C),col:Math.floor(.6*j),pattern:[[0,1],[0,2],[1,0],[1,3],[2,1],[2,2]]}].forEach((e=>{let{row:t,col:s,pattern:r}=e;r.forEach((e=>{let[r,o]=e;const i=t+r,c=s+o;i>=0&&i<C&&c>=0&&c<j&&l.current.born(new n(i,c))}))})),m("Added ".concat(l.current.getCells().length," cells (clusters + stable patterns)")),setTimeout((()=>m("")),2e3),k()}),[k,C,j]);return(0,s.useEffect)((()=>{k()}),[k]),(0,s.useEffect)((()=>{c&&(clearInterval(i.current),i.current=setInterval(S,h))}),[h,S,c]),(0,s.useEffect)((()=>()=>{clearInterval(i.current)}),[]),(0,r.jsxs)("div",{className:"gameoflife-container",children:[(0,r.jsxs)("div",{className:"gameoflife-header",children:[(0,r.jsx)("h3",{style:{color:"#5abb9a",marginBottom:"10px"},children:"Kuber's Game of Life"}),(0,r.jsx)("p",{style:{color:"#ffebcd",fontSize:"14px",marginBottom:"15px"},children:"Click cells to toggle them, use preset patterns, then press Play to watch evolution!"})]}),(0,r.jsxs)("div",{className:"gameoflife-controls",children:[(0,r.jsx)("button",{className:"gameoflife-btn",onClick:M,children:c?"\u23f8\ufe0f Pause":"\u25b6\ufe0f Play"}),(0,r.jsx)("button",{className:"gameoflife-btn",onClick:S,disabled:c,children:"\u23ed\ufe0f Step"}),(0,r.jsx)("button",{className:"gameoflife-btn",onClick:y,children:"\ud83d\uddd1\ufe0f Clear"}),(0,r.jsx)("button",{className:"gameoflife-btn",onClick:A,children:"\ud83c\udfb2 Random"})]}),(0,r.jsxs)("div",{className:"gameoflife-settings",children:[(0,r.jsxs)("div",{className:"speed-controls",children:[(0,r.jsx)("label",{style:{color:"#ffebcd",marginRight:"10px"},children:"Speed:"}),(0,r.jsx)("button",{className:"gameoflife-speed-btn ".concat(400===h?"active":""),onClick:()=>f(400),children:"Slow"}),(0,r.jsx)("button",{className:"gameoflife-speed-btn ".concat(200===h?"active":""),onClick:()=>f(200),children:"Normal"}),(0,r.jsx)("button",{className:"gameoflife-speed-btn ".concat(100===h?"active":""),onClick:()=>f(100),children:"Fast"})]}),(0,r.jsxs)("label",{className:"grid-toggle",children:[(0,r.jsx)("input",{type:"checkbox",checked:d,onChange:e=>b(e.target.checked)}),(0,r.jsx)("span",{style:{color:"#ffebcd",marginLeft:"5px"},children:"Show Grid"})]})]}),(0,r.jsxs)("div",{className:"gameoflife-stats",children:[(0,r.jsxs)("span",{style:{color:"#5abb9a"},children:["Generation: ",u]}),(0,r.jsxs)("span",{style:{color:"#5abb9a",marginLeft:"20px"},children:["Population: ",(null===(e=l.current)||void 0===e?void 0:e.getCells().length)||0]}),p&&(0,r.jsx)("span",{style:{color:"#ffcc00",marginLeft:"20px",fontSize:"12px"},children:p})]}),(0,r.jsx)("canvas",{ref:t,width:v,height:x,className:"gameoflife-canvas",onClick:w,onTouchStart:N}),(0,r.jsx)("div",{className:"gameoflife-instructions",children:(0,r.jsx)("p",{style:{color:"#888",fontSize:"12px",textAlign:"center"},children:"Rules: (1) Live cell with <2 neighbors dies (2) Live cell with 2-3 neighbors survives (3) Live cell with >3 neighbors dies (4) Dead cell with exactly 3 neighbors becomes alive"})})]})},c=s.memo(i)}}]);
//# sourceMappingURL=416.749f7901.chunk.js.map