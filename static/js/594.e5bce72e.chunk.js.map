{"version":3,"file":"static/js/594.e5bce72e.chunk.js","mappings":"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","sources":["components/GitHubFeed/GitHubFeed.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './GitHubFeed.css';\r\n\r\nconst GitHubFeed = () => {\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('repos');\r\n  const [stats, setStats] = useState(null);\r\n  const [username, setUsername] = useState('Kuberwastaken');\r\n  const [inputUsername, setInputUsername] = useState('');\r\n\r\n  const fetchGitHubData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const [reposResponse, eventsResponse, userResponse] = await Promise.all([\r\n        fetch(`https://api.github.com/users/${username}/repos?sort=updated&per_page=10`),\r\n        fetch(`https://api.github.com/users/${username}/events?per_page=15`),\r\n        fetch(`https://api.github.com/users/${username}`)\r\n      ]);\r\n\r\n      if (!reposResponse.ok || !eventsResponse.ok || !userResponse.ok) {\r\n        throw new Error('Failed to fetch GitHub data');\r\n      }\r\n\r\n      const [reposData, eventsData, userData] = await Promise.all([\r\n        reposResponse.json(),\r\n        eventsResponse.json(),\r\n        userResponse.json()\r\n      ]);\r\n\r\n      setRepositories(reposData);\r\n      setEvents(eventsData.slice(0, 10)); // Limit to 10 recent events\r\n      setStats({\r\n        public_repos: userData.public_repos,\r\n        followers: userData.followers,\r\n        following: userData.following,\r\n        total_stars: reposData.reduce((acc, repo) => acc + repo.stargazers_count, 0)\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    fetchGitHubData();\r\n    // Refresh data every 5 minutes\r\n    const interval = setInterval(fetchGitHubData, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchGitHubData, username]);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diff = now - date;\r\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(diff / (1000 * 60 * 60));\r\n    const minutes = Math.floor(diff / (1000 * 60));\r\n\r\n    if (days > 0) return `${days}d ago`;\r\n    if (hours > 0) return `${hours}h ago`;\r\n    if (minutes > 0) return `${minutes}m ago`;\r\n    return 'Just now';\r\n  };\r\n\r\n  const getEventIcon = (type) => {\r\n    const iconMap = {\r\n      PushEvent: '📤',\r\n      CreateEvent: '✨',\r\n      WatchEvent: '⭐',\r\n      ForkEvent: '🍴',\r\n      IssuesEvent: '🐛',\r\n      PullRequestEvent: '🔀',\r\n      ReleaseEvent: '🚀',\r\n      PublicEvent: '🌍',\r\n      default: '📝'\r\n    };\r\n    return iconMap[type] || iconMap.default;\r\n  };\r\n\r\n  const getEventDescription = (event) => {\r\n    switch (event.type) {\r\n      case 'PushEvent':\r\n        const commits = event.payload.commits?.length || 0;\r\n        return `Pushed ${commits} commit${commits !== 1 ? 's' : ''} to ${event.repo.name}`;\r\n      case 'CreateEvent':\r\n        return `Created ${event.payload.ref_type} ${event.payload.ref || ''} in ${event.repo.name}`;\r\n      case 'WatchEvent':\r\n        return `Starred ${event.repo.name}`;\r\n      case 'ForkEvent':\r\n        return `Forked ${event.repo.name}`;\r\n      case 'IssuesEvent':\r\n        return `${event.payload.action} issue in ${event.repo.name}`;\r\n      case 'PullRequestEvent':\r\n        return `${event.payload.action} pull request in ${event.repo.name}`;\r\n      case 'ReleaseEvent':\r\n        return `Released ${event.payload.release?.tag_name} in ${event.repo.name}`;\r\n      case 'PublicEvent':\r\n        return `Made ${event.repo.name} public`;\r\n      default:\r\n        return `Activity in ${event.repo.name}`;\r\n    }\r\n  };\r\n\r\n  const openRepository = (repoUrl) => {\r\n    window.open(repoUrl, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const handleUsernameChange = () => {\r\n    if (inputUsername.trim() && inputUsername.trim() !== username) {\r\n      setUsername(inputUsername.trim());\r\n      setInputUsername('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleUsernameChange();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"github-feed\">\r\n        <div className=\"github-header\">\r\n          <h3>⚡ GitHub Activity Feed</h3>\r\n          <div className=\"loading-spinner\">Loading GitHub data...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"github-feed\">\r\n        <div className=\"github-header\">\r\n          <h3>⚡ GitHub Activity Feed</h3>\r\n          <div className=\"error-message\">\r\n            <p>❌ {error}</p>\r\n            <button onClick={fetchGitHubData} className=\"retry-btn\">\r\n              🔄 Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"github-feed\">\r\n      <div className=\"github-header\">\r\n        <h3>⚡ GitHub Activity Feed</h3>\r\n        <p>Live updates from <a href={`https://github.com/${username}`} target=\"_blank\" rel=\"noopener noreferrer\">@{username}</a></p>\r\n        \r\n        <div className=\"username-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputUsername}\r\n            onChange={(e) => setInputUsername(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Enter GitHub username...\"\r\n            className=\"username-field\"\r\n          />\r\n          <button onClick={handleUsernameChange} disabled={!inputUsername.trim()}>\r\n            🔍 Load User\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"quick-users\">\r\n          <span>Quick users: </span>\r\n          <button onClick={() => setUsername('Kuberwastaken')} className=\"quick-btn\">Me</button>\r\n          <button onClick={() => setUsername('torvalds')} className=\"quick-btn\">Linus</button>\r\n          <button onClick={() => setUsername('gaearon')} className=\"quick-btn\">Dan A.</button>\r\n          <button onClick={() => setUsername('tj')} className=\"quick-btn\">TJ</button>\r\n        </div>\r\n        \r\n        {stats && (\r\n          <div className=\"github-stats\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{stats.public_repos}</span>\r\n              <span className=\"stat-label\">Repos</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{stats.total_stars}</span>\r\n              <span className=\"stat-label\">Stars</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{stats.followers}</span>\r\n              <span className=\"stat-label\">Followers</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{stats.following}</span>\r\n              <span className=\"stat-label\">Following</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"github-tabs\">\r\n        <button\r\n          className={`tab-btn ${activeTab === 'repos' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('repos')}\r\n        >\r\n          📂 Recent Repos\r\n        </button>\r\n        <button\r\n          className={`tab-btn ${activeTab === 'activity' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('activity')}\r\n        >\r\n          📈 Recent Activity\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"github-content\">\r\n        {activeTab === 'repos' && (\r\n          <div className=\"repos-list\">\r\n            {repositories.map((repo) => (\r\n              <div key={repo.id} className=\"repo-item\" onClick={() => openRepository(repo.html_url)}>\r\n                <div className=\"repo-header\">\r\n                  <h4 className=\"repo-name\">{repo.name}</h4>\r\n                  <div className=\"repo-stats\">\r\n                    {repo.stargazers_count > 0 && (\r\n                      <span className=\"repo-stat\">⭐ {repo.stargazers_count}</span>\r\n                    )}\r\n                    {repo.forks_count > 0 && (\r\n                      <span className=\"repo-stat\">🍴 {repo.forks_count}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                {repo.description && (\r\n                  <p className=\"repo-description\">{repo.description}</p>\r\n                )}\r\n                \r\n                <div className=\"repo-footer\">\r\n                  {repo.language && (\r\n                    <span className=\"repo-language\">\r\n                      <span className=\"language-dot\" style={{ backgroundColor: getLanguageColor(repo.language) }}></span>\r\n                      {repo.language}\r\n                    </span>\r\n                  )}\r\n                  <span className=\"repo-updated\">Updated {formatDate(repo.updated_at)}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'activity' && (\r\n          <div className=\"activity-list\">\r\n            {events.map((event, index) => (\r\n              <div key={`${event.id}-${index}`} className=\"activity-item\">\r\n                <div className=\"activity-icon\">{getEventIcon(event.type)}</div>\r\n                <div className=\"activity-content\">\r\n                  <p className=\"activity-description\">{getEventDescription(event)}</p>\r\n                  <span className=\"activity-time\">{formatDate(event.created_at)}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"github-footer\">\r\n        <button onClick={fetchGitHubData} className=\"refresh-btn\">\r\n          🔄 Refresh\r\n        </button>\r\n        <small>Auto-refreshes every 5 minutes</small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get language colors\r\nconst getLanguageColor = (language) => {\r\n  const colors = {\r\n    JavaScript: '#f7df1e',\r\n    TypeScript: '#3178c6',\r\n    Python: '#3776ab',\r\n    Java: '#ed8b00',\r\n    HTML: '#e34c26',\r\n    CSS: '#1572b6',\r\n    React: '#61dafb',\r\n    Vue: '#4fc08d',\r\n    PHP: '#777bb4',\r\n    C: '#a8b9cc',\r\n    'C++': '#f34b7d',\r\n    'C#': '#239120',\r\n    Go: '#00add8',\r\n    Rust: '#000000',\r\n    Swift: '#fa7343',\r\n    Kotlin: '#7f52ff',\r\n    Dart: '#0175c2',\r\n    Ruby: '#cc342d',\r\n    Shell: '#89e051',\r\n    Dockerfile: '#384d54'\r\n  };\r\n  return colors[language] || '#6a737d';\r\n};\r\n\r\nexport default GitHubFeed; "],"names":["getLanguageColor","language","JavaScript","TypeScript","Python","Java","HTML","CSS","React","Vue","PHP","C","Go","Rust","Swift","Kotlin","Dart","Ruby","Shell","Dockerfile","GitHubFeed","repositories","setRepositories","useState","events","setEvents","loading","setLoading","error","setError","activeTab","setActiveTab","stats","setStats","username","setUsername","inputUsername","setInputUsername","fetchGitHubData","useCallback","async","reposResponse","eventsResponse","userResponse","Promise","all","fetch","ok","Error","reposData","eventsData","userData","json","slice","public_repos","followers","following","total_stars","reduce","acc","repo","stargazers_count","err","message","useEffect","interval","setInterval","clearInterval","formatDate","dateString","date","Date","diff","days","Math","floor","hours","minutes","getEventIcon","type","iconMap","PushEvent","CreateEvent","WatchEvent","ForkEvent","IssuesEvent","PullRequestEvent","ReleaseEvent","PublicEvent","default","getEventDescription","event","_event$payload$commit","_event$payload$releas","commits","payload","length","name","ref_type","ref","action","release","tag_name","handleUsernameChange","trim","_jsx","className","children","_jsxs","onClick","href","target","rel","value","onChange","e","onKeyPress","key","placeholder","disabled","map","openRepository","repoUrl","html_url","window","open","forks_count","description","style","backgroundColor","updated_at","id","index","created_at"],"sourceRoot":""}