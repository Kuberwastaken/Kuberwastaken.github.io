{"version":3,"file":"static/js/99.26ba00b0.chunk.js","mappings":"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","sources":["components/PasswordGenerator/PasswordGenerator.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './PasswordGenerator.css';\r\n\r\nconst PasswordGenerator = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [length, setLength] = useState(12);\r\n  const [options, setOptions] = useState({\r\n    lowercase: true,\r\n    uppercase: true,\r\n    numbers: true,\r\n    symbols: true,\r\n    excludeSimilar: false,\r\n    excludeAmbiguous: false\r\n  });\r\n  const [strength, setStrength] = useState(0);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const characterSets = {\r\n    lowercase: 'abcdefghijklmnopqrstuvwxyz',\r\n    uppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n    numbers: '0123456789',\r\n    symbols: '!@#$%^&*()_+-=[]{}|;:,.<>?',\r\n    similar: 'il1Lo0O',\r\n    ambiguous: '{}[]()/\\\\\\'\"`~,;.<>'\r\n  };\r\n\r\n  const calculateStrength = (pass) => {\r\n    let score = 0;\r\n    \r\n    // Length scoring\r\n    if (pass.length >= 8) score += 1;\r\n    if (pass.length >= 12) score += 1;\r\n    if (pass.length >= 16) score += 1;\r\n    \r\n    // Character type scoring - check if password actually contains these\r\n    if (/[a-z]/.test(pass)) score += 1; // Has lowercase\r\n    if (/[A-Z]/.test(pass)) score += 1; // Has uppercase\r\n    if (/\\d/.test(pass)) score += 1; // Has numbers\r\n    if (/[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/.test(pass)) score += 1; // Has symbols\r\n    \r\n    // Bonus points for very long passwords\r\n    if (pass.length >= 20) score += 1;\r\n    \r\n    // Character diversity bonus\r\n    const uniqueChars = new Set(pass).size;\r\n    if (uniqueChars >= pass.length * 0.7) score += 1; // High character diversity\r\n    \r\n    return Math.min(score, 5);\r\n  };\r\n\r\n  const generatePassword = useCallback(() => {\r\n    let charset = '';\r\n    if (options.lowercase) charset += characterSets.lowercase;\r\n    if (options.uppercase) charset += characterSets.uppercase;\r\n    if (options.numbers) charset += characterSets.numbers;\r\n    if (options.symbols) charset += characterSets.symbols;\r\n\r\n    if (options.excludeSimilar) {\r\n      charset = charset.split('').filter(char => !characterSets.similar.includes(char)).join('');\r\n    }\r\n    if (options.excludeAmbiguous) {\r\n      charset = charset.split('').filter(char => !characterSets.ambiguous.includes(char)).join('');\r\n    }\r\n\r\n    if (charset === '') {\r\n      setPassword('');\r\n      setStrength(0);\r\n      return;\r\n    }\r\n\r\n    let newPassword = '';\r\n    const array = new Uint8Array(length);\r\n    window.crypto.getRandomValues(array);\r\n    \r\n    for (let i = 0; i < length; i++) {\r\n      newPassword += charset[array[i] % charset.length];\r\n    }\r\n\r\n    setPassword(newPassword);\r\n    setStrength(calculateStrength(newPassword));\r\n    setCopied(false);\r\n  }, [length, options]);\r\n\r\n  const copyToClipboard = async () => {\r\n    if (!password) return;\r\n    \r\n    try {\r\n      await navigator.clipboard.writeText(password);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      // Fallback for older browsers\r\n      const textArea = document.createElement('textarea');\r\n      textArea.value = password;\r\n      document.body.appendChild(textArea);\r\n      textArea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (option) => {\r\n    const newOptions = { ...options, [option]: !options[option] };\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const getStrengthColor = () => {\r\n    const colors = ['#d64545', '#d6a545', '#d6d645', '#a5d645', '#45d645'];\r\n    return colors[Math.max(0, strength - 1)] || '#d64545';\r\n  };\r\n\r\n  const getStrengthText = () => {\r\n    const texts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];\r\n    return texts[Math.max(0, strength - 1)] || 'Very Weak';\r\n  };\r\n\r\n  const presetPasswords = [\r\n    { name: 'Secure (16 chars)', length: 16, options: { lowercase: true, uppercase: true, numbers: true, symbols: true, excludeSimilar: true, excludeAmbiguous: false } },\r\n    { name: 'PIN (4 digits)', length: 4, options: { lowercase: false, uppercase: false, numbers: true, symbols: false, excludeSimilar: false, excludeAmbiguous: false } },\r\n    { name: 'Alphanumeric (12)', length: 12, options: { lowercase: true, uppercase: true, numbers: true, symbols: false, excludeSimilar: false, excludeAmbiguous: false } },\r\n    { name: 'Max Security (20)', length: 20, options: { lowercase: true, uppercase: true, numbers: true, symbols: true, excludeSimilar: true, excludeAmbiguous: true } }\r\n  ];\r\n\r\n  const applyPreset = (preset) => {\r\n    setLength(preset.length);\r\n    setOptions(preset.options);\r\n  };\r\n\r\n  return (\r\n    <div className=\"password-generator\">\r\n      <div className=\"password-header\">\r\n        <h3>🔐 Password Generator</h3>\r\n        <p>Generate secure, cryptographically random passwords</p>\r\n      </div>\r\n\r\n      <div className=\"password-output\">\r\n        <div className=\"password-display\">\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            readOnly\r\n            placeholder=\"Generated password will appear here...\"\r\n            className=\"password-field\"\r\n          />\r\n          <button\r\n            onClick={copyToClipboard}\r\n            disabled={!password}\r\n            className={`copy-btn ${copied ? 'copied' : ''}`}\r\n          >\r\n            {copied ? '✓' : '📋'}\r\n          </button>\r\n        </div>\r\n        \r\n        {password && (\r\n          <div className=\"password-strength\">\r\n            <div className=\"strength-bar\">\r\n              <div \r\n                className=\"strength-fill\"\r\n                style={{ \r\n                  width: `${(strength / 5) * 100}%`,\r\n                  backgroundColor: getStrengthColor()\r\n                }}\r\n              />\r\n            </div>\r\n            <span style={{ color: getStrengthColor() }}>\r\n              {getStrengthText()}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"password-controls\">\r\n        <div className=\"length-control\">\r\n          <label>\r\n            Length: <span className=\"length-value\">{length}</span>\r\n          </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"4\"\r\n            max=\"50\"\r\n            value={length}\r\n            onChange={(e) => setLength(parseInt(e.target.value))}\r\n            className=\"length-slider\"\r\n          />\r\n          <div className=\"length-labels\">\r\n            <span>4</span>\r\n            <span>50</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"options-grid\">\r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.lowercase}\r\n              onChange={() => handleOptionChange('lowercase')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Lowercase (a-z)\r\n          </label>\r\n          \r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.uppercase}\r\n              onChange={() => handleOptionChange('uppercase')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Uppercase (A-Z)\r\n          </label>\r\n          \r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.numbers}\r\n              onChange={() => handleOptionChange('numbers')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Numbers (0-9)\r\n          </label>\r\n          \r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.symbols}\r\n              onChange={() => handleOptionChange('symbols')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Symbols (!@#$...)\r\n          </label>\r\n          \r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.excludeSimilar}\r\n              onChange={() => handleOptionChange('excludeSimilar')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Exclude Similar (il1Lo0O)\r\n          </label>\r\n          \r\n          <label className=\"option-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.excludeAmbiguous}\r\n              onChange={() => handleOptionChange('excludeAmbiguous')}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n            Exclude Ambiguous\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"action-buttons\">\r\n          <button onClick={generatePassword} className=\"generate-btn\">\r\n            🎲 Generate Password\r\n          </button>\r\n          <button onClick={() => setPassword('')} className=\"clear-btn\">\r\n            🗑️ Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"presets-section\">\r\n        <h4>Quick Presets:</h4>\r\n        <div className=\"preset-buttons\">\r\n          {presetPasswords.map((preset, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => applyPreset(preset)}\r\n              className=\"preset-btn\"\r\n            >\r\n              {preset.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordGenerator; "],"names":["PasswordGenerator","password","setPassword","useState","length","setLength","options","setOptions","lowercase","uppercase","numbers","symbols","excludeSimilar","excludeAmbiguous","strength","setStrength","copied","setCopied","characterSets","similar","ambiguous","generatePassword","useCallback","charset","split","filter","char","includes","join","newPassword","array","Uint8Array","window","crypto","getRandomValues","i","pass","score","test","Set","size","Math","min","calculateStrength","handleOptionChange","option","newOptions","getStrengthColor","max","_jsxs","className","children","_jsx","type","value","readOnly","placeholder","onClick","async","navigator","clipboard","writeText","setTimeout","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","disabled","style","width","backgroundColor","color","onChange","e","parseInt","target","checked","name","map","preset","index","applyPreset"],"sourceRoot":""}